{"categories":[{"link":"/categories/database/","name":"Database","slug":"Database"},{"link":"/categories/postgresql/","name":"Postgresql","slug":"Postgresql"},{"link":"/categories/sql/","name":"Sql","slug":"Sql"}],"pages":[],"posts":[{"link":"/posts/2020/09/postgresql-mac-part3/","text":"This time we will practice:\nCreating a database using postgres utility and psql Renaming a database using psql Deleting a database using postgres utility and psql Collection of commands Please make sure the postgres server is running. Check this Getting Started with PostgreSQL on Mac Part 3.\nCreating a database Just like creating a role, we could create a database using both postgres utility or using psql as well.\nUsing postgres utility Open terminal\nEnter and type this command to create a database with name my_database for role myrole.\nBASH Collapse Copy 1createdb -U myrole my_database Click to expand and view more but if you don\u0026rsquo;t have any role setup at the moment, enter this:\nBASH Collapse Copy 1createdb my_database Click to expand and view more This will create a database owned by the default user.\nCheck the database is created, open postgres shell by running this on terminal psql or psql postgres.\nRun this command on shell to list the databases:\nBASH Collapse Copy 1\\list Click to expand and view more You should see the newly created database.\nDeleting a database using postgres utility Open terminal and run this command:\nBASH Collapse Copy 1dropdb my_database Click to expand and view more You can go to psql shell and run command \\list to check that my_database should be gone from the list.\nUsing psql Open terminal\nGo to psql shell:\nBASH Collapse Copy 1psql postgres Click to expand and view more Type and enter this query to create a database:\nBASH Collapse Copy 1CREATE DATABASE my_database; Click to expand and view more Check the database is created by running \\list command.\nLet\u0026rsquo;s rename the database while we are in psql shell.\nRun this command to rename the database:\nBASH Collapse Copy 1ALTER DATABASE my_database RENAME TO updated_database; Click to expand and view more Deleting a database using psql Open postgres shell (psql postgres) and run this command:\nBASH Collapse Copy 1DROP DATABASE updated_database Click to expand and view more You can go to psql shell and run command \\list to check that updated_database should be gone from the list.\nFrom here, you can use any postgreSQL clients (python client etc) or directly using psql console to start using the database.\nCollection of commands Terminal commands:\npg_ctl -D /usr/local/var/postgres -l logfile start : start a postgres server of the specified path cluster. pg_ctl -D /usr/local/var/postgres -l logfile stop: stop a postgres server of the specifiec path cluster. Postgress utilities . psql -U \u0026lt;role name\u0026gt; : open psql shell or console as a role. psql postgres : open psql shell or console as the default role (superuser). Psql shell/console commands:\n\\du : list roles. \\list : list databases. \\connect \u0026lt;database name\u0026gt; : connect to a database specified. \\dt : list tables in a database. \\q : quit psql shell / console. ","title":"Getting Started with PostgreSQL on Mac Part 3"},{"link":"/posts/2020/08/postgresql-mac-part2/","text":"This time we will learn:\nChanging role password Creating a role using postgres utility and psql Adding attributes to a role during creation Connect to a cluster as a role Deleting a role using postgress utility and psql Connect to a cluster as a role Please make sure the postgres server is running. Check this Getting Started with PostgreSQL on Mac Part 1.\nChanging the postgres default password It\u0026rsquo;s a best practice to change the postgres password for security reason.\nEnter this to open postgres shell:\nBASH Collapse Copy 1psql postgres Click to expand and view more Enter this in postgres shell to change the default password (no passowrd), the it will prompt to enter a new password:\nBASH Collapse Copy 1\\password Click to expand and view more Creating a role By default after installation, a default postgres user or role with your Mac username will be created as a superuser. Creating a new role instead of using the default superuser role is always a best practice.\nIf you want to add more there are two ways to create a role (user):\nThrough the PostgreSQL utilities (installed with postgres installation) in the terminal.\nUsing client utilities createuser .\nBASH Collapse Copy 1createuser \u0026lt;username\u0026gt; Click to expand and view more Directly in database or through psql shell of a superuser.\nBASH Collapse Copy 1CREATE ROLE \u0026lt;username\u0026gt; WITH LOGIN PASSWORD \u0026#39;your password\u0026#39;; Click to expand and view more 1. Create a role using utilities This newly created user will have a default attributes which is empty. Okay, now let\u0026rsquo;s create a role using the postgres utilities.\nOpen terminal and type this command:\nBASH Collapse Copy 1createuser testuser Click to expand and view more This will create a new role with name testuser. This role will does not have a database\nNow, let\u0026rsquo;s connect to db as this role. Run this on terminal to connect to the default db:\nBASH Collapse Copy 1psql postgres -U testuser Click to expand and view more As you can see from the terminal log, we are logged in as a non superuser. (\u0026gt;).\nBASH Collapse Copy 1# terminal log 2psql (12.4) 3Type \u0026#34;help\u0026#34; for help. 4 5postgres=\u0026gt; Click to expand and view more Let\u0026rsquo;s check the all roles that exist in the database. Run this command on postgres shell:\nBASH Collapse Copy 1 \\du Click to expand and view more As you can see, there our newly created role exists already but with empty attributes (default).\nBASH Collapse Copy 1Role name | Attributes | Member of 2 3-----------+------------------------------------------------------------+----------- 4macuser | Superuser, Create role, Create DB, Replication, Bypass RLS | {} 5testuser | Click to expand and view more We can add more attributes during role creation by providing the attributes or create the role interactively. For example, creating the role interactively:\nBASH Collapse Copy 1createuser testuser1 --interactive 2# prompt 3Shall the new role be a superuser? (y/n) n 4Shall the new role be allowed to create databases? (y/n) y 5Shall the new role be allowed to create more new roles? (y/n) n Click to expand and view more Now if we go into psql shell again and check the roles, we will see testuser1 will have an attribute we have specified during interactive creation:\nBASH Collapse Copy 1postgres=\u0026gt; \\du 2 List of roles 3 4Role name | Attributes | Member of 5-----------+------------------------------------------------------------+----------- 6macuser | Superuser, Create role, Create DB, Replication, Bypass RLS | {} 7testuser | | {} 8testuser1 | Create DB Click to expand and view more Let\u0026rsquo;s delete all the roles we have created. Run these commands on terminal (assuming they don\u0026rsquo;t have any databases yet):\nBASH Collapse Copy 1dropuser testuser 2dropuser testuser1 Click to expand and view more 2. Creating a role using psql shell Open terminal and enter this to open psql shell as a superuser:\nBASH Collapse Copy 1psql postgres Click to expand and view more Type and enter this sql query in psql shell to create a role. Password can be NULL, but it\u0026rsquo;s not recommended:\nBASH Collapse Copy 1CREATE ROLE testuser WITH LOGIN PASSWORD \u0026#39;yourpassword\u0026#39;; Click to expand and view more Check if the user is created by listing all the users in cluster:\nBASH Collapse Copy 1\\du 2 3# output 4 List of roles 5Role name | Attributes | Member of 6-----------+------------------------------------------------------------+----------- 7macuser | Superuser, Create role, Create DB, Replication, Bypass RLS | {} 8testuser | | {} 9 10postgres=# Click to expand and view more Now, let\u0026rsquo;s add some attributes. Type and enter this command:\nBASH Collapse Copy 1ALTER ROLE testuser CREATEDB; Click to expand and view more Now if check the list of users again using \\du:\nBASH Collapse Copy 1 List of roles 2 3 Role name | Attributes | Member of 4 -----------+------------------------------------------------------------+----------- 5 swiftmage | Superuser, Create role, Create DB, Replication, Bypass RLS | {} 6 testuser | Create DB Click to expand and view more Let\u0026rsquo;s delete this new role we have created:\nBASH Collapse Copy 1DROP ROLE testuser; Click to expand and view more Check it\u0026rsquo;s gone from the list using \\du.\nType and enter \\q to quit psql shell.\n","title":"Getting Started with PostgreSQL on Mac Part 2"},{"link":"/posts/2020/08/postgresql-mac-part1/","text":"This time we will discuss:\nInstalling postgresql using homebrew Configuring a cluster Starting a server Stopping a server Viewing redirected log Install postgreSQL using homebrew There are multiple ways to install postgresql on your mac. Let\u0026rsquo;s install it through command line for this post.\nYou need to have homebrew installed before continuing. Check here Homebrew on how to install homebrew.\nOpen terminal and run this:\nCONSOLE Collapse Copy 1brew install postgresql Click to expand and view more Once installation is done, check just installed postgresql version using this command:\nCONSOLE Collapse Copy 1psql -V 2# or 3postgres -V Click to expand and view more Output will be like:\nCONSOLE Collapse Copy 1# output 2postgres (PostgreSQL) 12.4 Click to expand and view more Configure cluster and start server After successfully installing postgresql, in terminal log there will be this note:\nCONSOLE Collapse Copy 1==\u0026gt; postgresql 2To migrate existing data from a previous major version of PostgreSQL run: 3 brew postgresql-upgrade-database 4 5This formula has created a default database cluster with: 6 initdb --locale=C -E UTF-8 /usr/local/var/postgres 7For more details, read: 8 https://www.postgresql.org/docs/12/app-initdb.html 9 10To have launchd start postgresql now and restart at login: 11 brew services start postgresql 12Or, if you don\u0026#39;t want/need a background service you can just run: 13 pg_ctl -D /usr/local/var/postgres start Click to expand and view more So, first create your cluster using this command:\nCONSOLE Collapse Copy 1initdb --locale=C -E UTF-8 /usr/local/var/postgres Click to expand and view more When it\u0026rsquo;s done, at the end of the the terminal log, will say this:\nCONSOLE Collapse Copy 1Success. You can now start the database server using: 2 3 pg_ctl -D /usr/local/var/postgres -l logfile start Click to expand and view more Start your server using pg_ctl, it is a utility to initialize, start, stop, or control a PostgreSQL server.\nFull documentation Postgresql . Let\u0026rsquo;s start the server by running this command:\nCONSOLE Collapse Copy 1pg_ctl -D /usr/local/var/postgres -l logfile start Click to expand and view more This will start a database cluster server we specify in -D option (/usr/local/var/postgres) and redirect the log to a file using -l option with file name logfile in the current directory. The output will be like:\nCONSOLE Collapse Copy 1waiting for server to start.... done 2server started Click to expand and view more If you want to start the server automatically during login, this command will add postgresql service to launchd.\nCONSOLE Collapse Copy 1brew services start postgresql Click to expand and view more Let\u0026rsquo;s try to open the postgresql shell, try to type and run psql command on terminal. If you get this output error, it means the database is not created yet.\nCONSOLE Collapse Copy 1# output 2psql: error: could not connect to server: FATAL: database \u0026#34;macuser\u0026#34; does not exist Click to expand and view more In Mac, after installation using brew, you a default user with the mac username is created but the database is not. You need to run createdb in the terminal. then you can enter the shell as your mac user name (superuser) with only entering psql.\nOther terminal utilities for postgreSQL is documented PostgreSQL . This often happen on Mac. Just create a database by running this command on terminal:\nCONSOLE Collapse Copy 1createdb Click to expand and view more Type and enter psql on terminal again and the postgresql shell should be opened:\nCONSOLE Collapse Copy 1psql (12.4) 2Type \u0026#34;help\u0026#34; for help. 3 4macuser=# Click to expand and view more The # sign tells that you are logged in as a role with superuser capabilities. Type \\q to exit the shell.\nYou can enter the postgres shell as the default superuser role with this command:\nCONSOLE Collapse Copy 1psql postgres Click to expand and view more or enter the shell as a role\nCONSOLE Collapse Copy 1psql postgres -U \u0026lt;username\u0026gt; Click to expand and view more Stop server To stop the server, use this pg_ctl command:\nCONSOLE Collapse Copy 1pg_ctl -D /usr/local/var/postgres stop Click to expand and view more Checking the log If you start the server using -l option, just open the file that is specified there. In this case logfile:\nCONSOLE Collapse Copy 1less logfile Click to expand and view more In this file we could see the url of the server as well:\nCONSOLE Collapse Copy 12020-08-31 02:12:26.089 BST [43338] LOG: starting PostgreSQL 12.4 on x86_64-apple-darwin19.5.0, compiled by Apple clang version 11.0.3 (clang-1103.0.32.62), 64-bit 22020-08-31 02:12:26.090 BST [43338] LOG: listening on IPv6 address \u0026#34;::1\u0026#34;, port 5432 32020-08-31 02:12:26.090 BST [43338] LOG: listening on IPv4 address \u0026#34;127.0.0.1\u0026#34;, port 5432 42020-08-31 02:12:26.092 BST [43338] LOG: listening on Unix socket \u0026#34;/tmp/.s.PGSQL.5432\u0026#34; 52020-08-31 02:12:26.113 BST [43339] LOG: database system was shut down at 2020-08-31 02:12:17 BST 62020-08-31 02:12:26.119 BST [43338] LOG: database system is ready to accept connections Click to expand and view more ","title":"Getting Started with PostgreSQL on Mac Part 1"}],"tags":[{"link":"/tags/database/","name":"Database","slug":"Database"},{"link":"/tags/tutorial/","name":"Tutorial","slug":"Tutorial"}]}